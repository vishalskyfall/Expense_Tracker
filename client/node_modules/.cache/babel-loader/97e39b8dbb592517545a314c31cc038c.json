{"ast":null,"code":"import _toConsumableArray from\"C:/React/Expense-Tracker/expense-tracker-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/React/Expense-Tracker/expense-tracker-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export default(function(state,action){switch(action.type){case'GET_TRANSACTIONS':return _objectSpread(_objectSpread({},state),{},{loading:false,transactions:action.payload});case'DELETE_TRANSACTION':return _objectSpread(_objectSpread({},state),{},{transactions:state.transactions.filter(function(transaction){return transaction._id!==action.payload;})});case'ADD_TRANSACTION':return _objectSpread(_objectSpread({},state),{},{transactions:[].concat(_toConsumableArray(state.transactions),[action.payload])});case'TRANSACTION_ERROR':return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["C:/React/Expense-Tracker/expense-tracker-react/client/src/context/AppReducer.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error"],"mappings":"6RAAA,eAAe,SAACA,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAOA,MAAM,CAACC,IAAd,EACE,IAAK,kBAAL,CACE,sCACKF,KADL,MAEEG,OAAO,CAAC,KAFV,CAGEC,YAAY,CAACH,MAAM,CAACI,OAHtB,GAKF,IAAK,oBAAL,CACE,sCACKL,KADL,MAEEI,YAAY,CAAEJ,KAAK,CAACI,YAAN,CAAmBE,MAAnB,CAA0B,SAAAC,WAAW,QAAIA,CAAAA,WAAW,CAACC,GAAZ,GAAoBP,MAAM,CAACI,OAA/B,EAArC,CAFhB,GAIF,IAAK,iBAAL,CACE,sCACKL,KADL,MAEEI,YAAY,8BAAMJ,KAAK,CAACI,YAAZ,GAAyBH,MAAM,CAACI,OAAhC,EAFd,GAIF,IAAK,mBAAL,CACE,sCACKL,KADL,MAEES,KAAK,CAACR,MAAM,CAACI,OAFf,GAIF,QACE,MAAOL,CAAAA,KAAP,CAvBJ,CAyBD,CA1BD","sourcesContent":["export default (state, action) => {\r\n  switch(action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return{\r\n        ...state,\r\n        loading:false,\r\n        transactions:action.payload\r\n      }\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions,action.payload]\r\n      }\r\n    case 'TRANSACTION_ERROR':\r\n      return{\r\n        ...state,\r\n        error:action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}