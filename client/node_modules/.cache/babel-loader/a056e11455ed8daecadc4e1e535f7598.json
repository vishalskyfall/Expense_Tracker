{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Expense-Tracker\\\\expense-tracker-react\\\\client\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from 'axios'; //initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; //create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //provider component\n\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('api/v1/transactions'); //no need to add local host as we have added proxy\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(`/api/v1/transactions/`, transaction, config);\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: transaction\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}; // export default GlobalProvider;\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/React/Expense-Tracker/expense-tracker-react/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAC,IAFa;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeS,eAAf,GAAgC;AAC9B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,qBAAV,CAAlB,CADE,CACgD;;AAElDH,MAAAA,QAAQ,CAAC;AACNI,QAAAA,IAAI,EAAC,kBADC;AAENC,QAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAKD,KARD,CAQE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,mBADE;AAEPC,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFnB,OAAD,CAAR;AAKD;AACF;;AACD,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMnB,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AAGAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KARD,CAQE,OAAOH,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,mBADE;AAEPC,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFnB,OAAD,CAAR;AAKD;AAEF;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AAEzC,UAAMC,MAAM,GAAE;AACZC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AADI,KAAd;;AAKA,QAAI;AACF,YAAMb,GAAG,GAAG,MAAMX,KAAK,CAACyB,IAAN,CAAY,uBAAZ,EAAmCH,WAAnC,EAA+CC,MAA/C,CAAlB;AAEAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEQ;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAON,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAC,mBADE;AAEPC,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFnB,OAAD,CAAR;AAKD;AAEF;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELC,MAAAA,KAAK,EAACK,KAAK,CAACL,KAFP;AAGLC,MAAAA,OAAO,EAACI,KAAK,CAACJ,OAHT;AAILM,MAAAA,eAJK;AAKLQ,MAAAA,iBALK;AAMLG,MAAAA;AANK,KADT;AAAA,cAUGd;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9EM,C,CAgFP;;GAhFaD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from 'axios';\r\n\r\n//initial State\r\nconst initialState = {\r\n  transactions: [],\r\n  error:null,\r\n  loading :true\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  async function getTransactions(){\r\n    try {\r\n      const res = await axios.get('api/v1/transactions')//no need to add local host as we have added proxy\r\n\r\n      dispatch({\r\n         type:'GET_TRANSACTIONS',\r\n         payload:res.data.data\r\n      })\r\n      \r\n    } catch (err) {\r\n      dispatch({\r\n        type:'TRANSACTION_ERROR',\r\n        payload:err.response.data.error\r\n     })\r\n     \r\n    }\r\n  }\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n\r\n      dispatch({\r\n        type: \"DELETE_TRANSACTION\",\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type:'TRANSACTION_ERROR',\r\n        payload:err.response.data.error\r\n     })\r\n     \r\n    }\r\n   \r\n  }\r\n\r\n  async function addTransaction(transaction) {\r\n\r\n    const config ={\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      }\r\n    }\r\n    try {\r\n      const res = await axios.post(`/api/v1/transactions/`,transaction,config)\r\n\r\n      dispatch({\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: transaction,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type:'TRANSACTION_ERROR',\r\n        payload:err.response.data.error\r\n     })\r\n     \r\n    }\r\n   \r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error:state.error,\r\n        loading:state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n// export default GlobalProvider;\r\n"]},"metadata":{},"sourceType":"module"}